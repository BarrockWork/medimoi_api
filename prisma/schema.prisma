// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Treatment_periodicity {
  id         Int         @id @default(autoincrement())
  Treatments Treatment[]
  name       String
  name_slug  String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  isActive   Boolean     @default(true)
}

model Treatment_media {
  id           Int       @id @default(autoincrement())
  treatment_id Int
  treatment    Treatment @relation(fields: [treatment_id], references: [id])
  name         String    @db.VarChar(255)
  mime_type    String    @db.VarChar(50)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  isActive     Boolean   @default(true)
}

model Treatment {
  id                       Int                   @id @default(autoincrement())
  treatments_drugs         Treatment_drug[]
  name                     String                @db.VarChar(255)
  treatment_periodicity_id Int
  treatment_periodicity    Treatment_periodicity @relation(fields: [treatment_periodicity_id], references: [id])
  user_id                  Int
  user                     User                  @relation(fields: [user_id], references: [id])
  createdAt                DateTime              @default(now())
  updatedAt                DateTime?             @updatedAt
  startedAt                DateTime
  finishedAt               DateTime?
  isActive                 Boolean               @default(true)
  drugs                    Drug[]                @relation(name: "drugs")
  treatments_medias        Treatment_media[]
}

model Company {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(50)
  name_slug     String         @unique @db.VarChar(50)
  siret         String         @db.VarChar(50)
  tva           String         @db.VarChar(50)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isActive      Boolean        @default(true)
  users_company User_company[]
}

model User_company {
  id              Int       @id @default(autoincrement())
  // Company relation ---------
  company_id      Int
  // -------------------------------
  // User relation -----------------
  user_id         Int
  user            User      @relation(fields: [user_id], references: [id])
  // -------------------------------
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  isActive        Boolean   @default(true)
  user_company_id Int
  company         Company   @relation(fields: [user_company_id], references: [id])
}

model User_type {
  id        Int       @id @default(autoincrement())
  users     User[]
  name      String    @db.VarChar(50)
  name_slug String    @unique @db.VarChar(50)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model User {
  id                       Int                      @id @default(autoincrement())
  addresses                Address[]
  user_notifications_types User_notification_type[]
  treatments               Treatment[]
  contacts                 Contact[]
  users_company            User_company[]
  firstName                String                   @db.VarChar(50)
  lastName                 String                   @db.VarChar(50)
  age                      Int                      @db.UnsignedInt
  email                    String                   @unique @db.VarChar(50)
  password                 String                   @db.VarChar(255)
  cellphone                String                   @db.VarChar(50)
  homephone                String                   @db.VarChar(50)
  workphone                String?                  @db.VarChar(50)
  role                     String                   @db.LongText
  user_type_id             Int
  user_type                User_type                @relation(fields: [user_type_id], references: [id])
  last_connection          DateTime?                @default(now())
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime?                @updatedAt
  isActive                 Boolean                  @default(true)
}

model Address {
  id                   Int               @id @default(autoincrement())
  number_road          Int
  name                 String            @db.VarChar(50)
  address_road_type_id Int
  user_id              Int
  user                 User              @relation(fields: [user_id], references: [id])
  additionnal_address  String            @db.VarChar(255)
  zipcode              String            @db.VarChar(10)
  city                 String            @db.VarChar(50)
  region               String            @db.VarChar(50)
  country              String            @db.VarChar(50)
  title                String            @db.VarChar(50)
  createdAt            DateTime          @default(now())
  updatedAt            DateTime?         @updatedAt
  address_road_type    Address_road_type @relation(fields: [address_road_type_id], references: [id])
}

model Contact {
  id              Int          @id @default(autoincrement())
  firstName       String       @db.VarChar(50)
  lastName        String       @db.VarChar(50)
  phoneNumber     String       @db.VarChar(50)
  // Contact_type relation ---------
  contact_type_id Int
  contact_type    Contact_type @relation(fields: [contact_type_id], references: [id])
  // -------------------------------
  // User relation -----------------
  user_id         Int
  user            User         @relation(fields: [user_id], references: [id])
  // -------------------------------
  createdAt       DateTime     @default(now())
  updatedAt       DateTime?    @updatedAt
  isActive        Boolean      @default(true)
}

model Contact_type {
  id        Int       @id @default(autoincrement())
  contacts  Contact[]
  name      String    @db.VarChar(50)
  name_slug String    @unique @db.VarChar(50)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)
}

model Drug {
  id                        Int                    @id @default(autoincrement())
  name                      String                 @db.VarChar(255)
  description               String                 @db.Text
  isPrescription            Boolean                @default(false)
  createdAt                 DateTime               @default(now())
  updatedAt                 DateTime?              @updatedAt
  isActive                  Boolean                @default(true)
  treatments_drug           Treatment_drug[]
  drug_level_id             Int
  drug_type_id              Int
  medical_administration_id Int
  medical_administration    Medical_administration @relation(fields: [medical_administration_id], references: [id])
  drug_type                 Drug_type              @relation(fields: [drug_type_id], references: [id])
  drug_level                Drug_level             @relation(fields: [drug_level_id], references: [id])
  treatment_id              Int
  treatment                 Treatment              @relation(fields: [treatment_id], references: [id], name: "drugs")
}

model Drug_level {
  id          Int       @id @default(autoincrement())
  level       Int
  description String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  isActive    Boolean   @default(true)
  drugs       Drug[]
}

model Drug_type {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  name_slug   String    @unique @db.VarChar(50)
  description String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  isActive    Boolean   @default(true)
  drugs       Drug[]
}

model Medical_administration {
  id        Int       @id @default(autoincrement())
  drugs     Drug[]
  name      String    @db.VarChar(255)
  name_slug String    @unique @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  isActive  Boolean   @default(true)
}

model Treatment_drug {
  id           Int       @id @default(autoincrement())
  treatment_id Int
  treatment    Treatment @relation(fields: [treatment_id], references: [id])
  drug_id      Int
  comment      String    @db.Text
  isActive     Boolean   @default(true)
  drug         Drug      @relation(fields: [drug_id], references: [id])
}

model Notification_type {
  id                       Int                      @id @default(autoincrement())
  user_notifications_types User_notification_type[]
  name                     String                   @db.VarChar(50)
  name_slug                String                   @unique @db.VarChar(50)
  createdAt                DateTime                 @default(now())
  updatedAt                DateTime?                @updatedAt
  isActive                 Boolean                  @default(true)
}

model User_notification_type {
  id                      Int                    @id @default(autoincrement())
  notification_type_id    Int
  notification_type       Notification_type      @relation(fields: [notification_type_id], references: [id])
  user_id                 Int
  user                    User                   @relation(fields: [user_id], references: [id])
  createdAt               DateTime               @default(now())
  updatedAt               DateTime?              @updatedAt
  isActive                Boolean                @default(true)
  notifications_histories Notification_history[]
}

model Notification_history {
  id                        Int                    @id @default(autoincrement())
  createdAt                 DateTime               @default(now())
  user_notification_type_id Int
  user_notification_type    User_notification_type @relation(fields: [user_notification_type_id], references: [id])
}

model Address_road_type {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  name_slug String    @unique @db.VarChar(50)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  addresses Address[]
}

model Disease_type {
  id          Int       @id @default(autoincrement())
  diseases    Disease[]
  name        String    @db.VarChar(255)
  name_slug   String    @unique @db.VarChar(255)
  description String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  isActive    Boolean   @default(true)
}

model Disease {
  id                Int          @id @default(autoincrement())
  name              String       @db.VarChar(255)
  name_slug         String       @unique @db.VarChar(255)
  description       String       @db.Text
  incubation_period String       @db.Text
  transmitting      String       @db.VarChar(255)
  disease_type_id   Int
  disease_type      Disease_type @relation(fields: [disease_type_id], references: [id])
  createdAt         DateTime     @default(now())
  updatedAt         DateTime?    @updatedAt
  isActive          Boolean      @default(true)
}
